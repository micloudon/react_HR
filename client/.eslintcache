[{"/home/mic/Documents/react/reactHr/client/src/index.js":"1","/home/mic/Documents/react/reactHr/client/src/App.js":"2","/home/mic/Documents/react/reactHr/client/src/reportWebVitals.js":"3","/home/mic/Documents/react/reactHr/client/src/components/Pagination.js":"4"},{"size":478,"mtime":1611011008289,"results":"5","hashOfConfig":"6"},{"size":6036,"mtime":1611084780966,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611010463774,"results":"8","hashOfConfig":"6"},{"size":452,"mtime":1611010719896,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"yird4q",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/mic/Documents/react/reactHr/client/src/index.js",[],["21","22"],"/home/mic/Documents/react/reactHr/client/src/App.js",["23"],"import Pagination from './components/Pagination'\nimport './App.css';\nimport {useState} from 'react';\nimport Axios from 'axios';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nfunction App() {\n\nconst [name, setName] = useState('')\nconst [age, setAge] = useState(0)\nconst [country, setCountry] = useState('')\nconst [position, setPosition] = useState('')\nconst [salary, setSalary] = useState(0)\n\nconst [newName, setNewName] = useState('')\nconst [newAge, setNewAge] = useState(0)\nconst [newCountry, setNewCountry] = useState('')\nconst [newPosition, setNewPosition] = useState('')\nconst [newSalary, setNewSalary] = useState(0)\n\nconst [employeeList, setEmployeeList] = useState([]); \n\nconst [currentPage, setCurrentPage] = useState(1);\nconst [postsPerPage, setPostsPerPage] = useState(2);\n\nconst addEmployee = () => {\nAxios.post('http://localhost:3001/create', \n{name: name, \nage: age, \ncountry: country, \nposition: position, \nsalary: salary}).then( () => {\nsetEmployeeList( [...employeeList, {\nname: name, \nage: age, \ncountry: country, \nposition: position, \nsalary: salary\n}] )\n})\n};\n\n// Get a list of employees\nconst getEmployees = () => {\nAxios.get('http://localhost:3001/employees').then( (response) => {\nsetEmployeeList(response.data);\n})\n} \n\nconst reset = () => {\nwindow.location.reload();\n}\n\n// Update employee info\nconst updateEmployeeName = (id) => {\nAxios.put('http://localhost:3001/update_name', {name: newName, id: id}).then( (response) => {\ngetEmployees()\n}\n)\n};\n\nconst updateEmployeeAge = (id) => {\nAxios.put('http://localhost:3001/update_age', {age: newAge, id: id}).then( (response) => {\ngetEmployees()\n}\n)\n};\n\nconst updateEmployeeCountry = (id) => {\nAxios.put('http://localhost:3001/update_country', {country: newCountry, id: id}).then( (response) => {\ngetEmployees()\n}\n)\n};\n\nconst updateEmployeePosition = (id) => {\nAxios.put('http://localhost:3001/update_position', {position: newPosition, id: id}).then( (response) => {\ngetEmployees()\n}\n)\n};\n\nconst updateEmployeeSalary = (id) => {\nAxios.put('http://localhost:3001/update_salary', {salary: newSalary, id: id}).then( (response) => {\ngetEmployees()\n}\n)\n};\n\n// Delete an employee object\nconst deleteEmployee = (id) => {\n\nconfirmAlert({\ntitle: 'Confirm to Delete',\nmessage: 'Are you sure you want to delete this employee?',\nbuttons: [\n{\nlabel: 'Yes',\nonClick: () => Axios.delete(`http://localhost:3001/delete/${id}`).then( (response) => {\ngetEmployees()\n}\n) \n},\n{\nlabel: 'No',\nonClick: () => getEmployees()\n}\n]\n});\n\n}\n\n// get current posts\nconst indexOfLastPost = currentPage * postsPerPage;\nconst indexOfFirstPost = indexOfLastPost - postsPerPage;\nconst currentPosts = employeeList.slice(indexOfFirstPost, indexOfLastPost);\n\n// Change page\nconst paginate = (pageNumber) => setCurrentPage(pageNumber)\n\nreturn (\n<div className=\"App\">\n    <h1>Employee Database</h1>\n\n    <div className=\"links\">\n    <button onClick={(e) => {\n    e.preventDefault();\n    window.location.href='https://github.com/micloudon/';\n    }}> <strong>My Github</strong></button>\n    <button onClick={(e) => {\n    e.preventDefault();\n    window.location.href='https://www.linkedin.com/in/michael-loudon-dev/';\n    }}><strong>My LinkedIn</strong></button>\n    </div>\n\n    <div className=\"inputs\">\n\n    <label><strong>Name:</strong></label>\n    <input type=\"text\" onChange={ \n    (event) => { setName(event.target.value) } } />\n\n    <label><strong>Age:</strong></label>\n    <input type=\"number\" onChange={ \n    (event) => { setAge(event.target.value) } }/>\n\n    <label><strong>Country:</strong></label>\n    <input type=\"text\" onChange={ \n    (event) => { setCountry(event.target.value) } } />\n\n    <label><strong>Position:</strong></label>\n    <input type=\"text\" onChange={ \n    (event) => { setPosition(event.target.value) } } />\n\n    <label><strong>Salary:</strong></label>\n    <input type=\"number\" onChange={ \n    (event) => { setSalary(event.target.value) } } />\n\n    <button className=\"add\" onClick={addEmployee}><strong>Add Employee</strong></button>\n    <button className=\"show\"onClick={getEmployees}><strong>Show Employees</strong></button>\n    <button className=\"show\"onClick={reset}><strong>Hide Employees</strong></button>\n\n    {currentPosts.map( (val, key) => {\n    return <div className=\"employee\"> \n\n    <div>\n    <button className=\"delete\" onClick={ () => {deleteEmployee(val.id)} }><strong>Delete</strong></button> \n    <h3>Name: {val.name} </h3>\n    <input type=\"text\" placeholder=\"Update\" onChange={ \n    (event) => { setNewName(event.target.value) } } /> \n    <button className=\"update\" onClick={ () => {updateEmployeeName(val.id)} } ><strong>Update</strong></button>\n    </div>\n\n    <div>\n    <h3>Age: {val.age} </h3>\n    <input type=\"number\" placeholder=\"Update\" onChange={ \n    (event) => { setNewAge(event.target.value) } } /> \n    <button button className=\"update\" onClick={ () => {updateEmployeeAge(val.id)} } ><strong>Update</strong></button>\n    </div>\n\n    <div>\n    <h3>Country: {val.country} </h3>\n    <input type=\"text\" placeholder=\"Update\" onChange={ \n    (event) => { setNewCountry(event.target.value) } } /> \n    <button button className=\"update\" onClick={ () => {updateEmployeeCountry(val.id)} } ><strong>Update</strong></button>\n    </div>\n\n    <div>\n    <h3>Position: {val.position} </h3>\n    <input type=\"text\" placeholder=\"Update\" onChange={ \n    (event) => { setNewPosition(event.target.value) } } /> \n    <button button className=\"update\" onClick={ () => {updateEmployeePosition(val.id)} } ><strong>Update</strong></button>\n    </div>\n    <div>\n    <h3>Salary: {val.salary} </h3>\n    <input type=\"number\" placeholder=\"Update\" onChange={ \n    (event) => { setNewSalary(event.target.value) } }/> \n    <button button className=\"update\" onClick={ () => {updateEmployeeSalary(val.id)} } ><strong>Update</strong></button> \n    </div> \n\n    </div> \n    } )}\n    <Pagination postsPerPage={postsPerPage} \n    totalPosts={employeeList.length} \n    paginate={paginate} />\n    </div>\n</div>\n);\n}\n\nexport default App;","/home/mic/Documents/react/reactHr/client/src/reportWebVitals.js",[],"/home/mic/Documents/react/reactHr/client/src/components/Pagination.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":25,"column":22,"nodeType":"32","messageId":"33","endLine":25,"endColumn":37},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'setPostsPerPage' is assigned a value but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]